// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

/**
* @title IStrategy
* @notice Interface for DarwinFi yield farming strategies
* @dev All strategy implementations must implement these methods
*/
interface IStrategy {
    /**
    * @notice Executes the strategy's yield farming logic
    * @param data The encoded data needed to execute the strategy
    * @return profit The profit generated from executing the strategy
    */
    function execute(bytes calldata data) external returns (uint256 profit);
    
    /**
    * @notice Returns the strategy's performance metrics
    * @return annualizedReturn Annualized return percentage (scaled by 1e18)
    * @return totalProfit Total profit generated by this strategy
    * @return executionCount Number of times this strategy has been executed
    * @return successRate Success rate of the strategy (scaled by 1e18)
    * @return riskScore Risk assessment score (1-100, with 100 being highest risk)
    */
    function getPerformanceMetrics() external view returns (
        uint256 annualizedReturn,
        uint256 totalProfit,
        uint256 executionCount,
        uint256 successRate,
        uint8 riskScore
    );
    
    /**
    * @notice Returns a human-readable description of the strategy
    * @return name The name of the strategy
    * @return description A detailed description of what the strategy does
    * @return version The strategy version
    */
    function getDescription() external view returns (
        string memory name,
        string memory description,
        string memory version
    );
}

